'use client'

import { useEffect, useRef, useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Zap, Code2, GitBranch, Rocket, CheckCircle, Clock, Users, BarChart3, X, Info } from 'lucide-react'
import { useAppStore } from '@/store/appStore'

const ProcessStage4 = () => {
  const { currentSkin, prefersReducedMotion } = useAppStore()
  const [isGlowing, setIsGlowing] = useState(false)
  const [isTyping, setIsTyping] = useState(false)
  const [currentCodeLine, setCurrentCodeLine] = useState(0)
  const [isPipelineRunning, setIsPipelineRunning] = useState(false)
  const [isDeploying, setIsDeploying] = useState(false)
  const [isTesting, setIsTesting] = useState(false)
  const [isReleasing, setIsReleasing] = useState(false)
  const [activeModal, setActiveModal] = useState<string | null>(null)
  
  const glowTimeoutRef = useRef<NodeJS.Timeout | null>(null)
  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null)
  const pipelineTimeoutRef = useRef<NodeJS.Timeout | null>(null)

  // –ú–∏–∫—Ä–æ-–∞–Ω–∏–º–∞—Ü–∏—è –∏–º–ø—É–ª—å—Å–∞ —Å–≤–µ—á–µ–Ω–∏—è –¥–ª—è –∏–∫–æ–Ω–∫–∏ ‚ö°
  useEffect(() => {
    const startGlow = () => {
      if (prefersReducedMotion) return
      
      setIsGlowing(true)
      
      if (glowTimeoutRef.current) {
        clearTimeout(glowTimeoutRef.current)
      }
      
      glowTimeoutRef.current = setTimeout(() => {
        setIsGlowing(false)
      }, 600)
    }

    startGlow()
    const interval = setInterval(startGlow, 4000)

    return () => {
      clearInterval(interval)
      if (glowTimeoutRef.current) {
        clearTimeout(glowTimeoutRef.current)
      }
    }
  }, [prefersReducedMotion])

  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ –∫–æ–¥–∞ (typewriter —ç—Ñ—Ñ–µ–∫—Ç)
  useEffect(() => {
    const codeLines = [
      'const deploy = async () => {',
      '  await runTests();',
      '  await buildApp();',
      '  await deployToProd();',
      '  return "Success! üöÄ";',
      '};'
    ]

    const startTyping = () => {
      if (prefersReducedMotion) return
      
      setIsTyping(true)
      setCurrentCodeLine(0)
      
      const typeNextLine = (lineIndex: number) => {
        if (lineIndex < codeLines.length) {
          setCurrentCodeLine(lineIndex)
          typingTimeoutRef.current = setTimeout(() => {
            typeNextLine(lineIndex + 1)
          }, 800)
        } else {
          setTimeout(() => {
            setIsTyping(false)
            setCurrentCodeLine(0)
          }, 1000)
        }
      }
      
      typeNextLine(0)
    }

    startTyping()
    const interval = setInterval(startTyping, 6000)

    return () => {
      clearInterval(interval)
      if (typingTimeoutRef.current) {
        clearTimeout(typingTimeoutRef.current)
      }
    }
  }, [prefersReducedMotion])

  // –ê–Ω–∏–º–∞—Ü–∏—è CI/CD –ø–∞–π–ø–ª–∞–π–Ω–∞
  useEffect(() => {
    const runPipeline = () => {
      if (prefersReducedMotion) return
      
      setIsPipelineRunning(true)
      setIsTesting(true)
      
      setTimeout(() => {
        setIsTesting(false)
        setIsDeploying(true)
      }, 1500)
      
      setTimeout(() => {
        setIsDeploying(false)
        setIsReleasing(true)
      }, 3000)
      
      setTimeout(() => {
        setIsReleasing(false)
        setIsPipelineRunning(false)
      }, 4500)
    }

    runPipeline()
    const interval = setInterval(runPipeline, 8000)

    return () => {
      clearInterval(interval)
    }
  }, [prefersReducedMotion])

  const content = {
    title: "Code & Ship",
    subtitle: "–ü–∏—à–µ–º –∫–æ–¥ —É—Ä–æ–≤–Ω—è FAANG, –¥–µ–ø–ª–æ–∏–º –∫–∞–∫ Vercel",
    trust: {
      experience: "1000+ —Ä–µ–ª–∏–∑–æ–≤",
      success: "99.9% uptime",
      expertise: "–≠–∫—Å–ø–µ—Ä—Ç—ã –ø–æ DevOps"
    },
    process: [
      "Git-flow, Code Review, –ª–∏–Ω—Ç–µ—Ä—ã",
      "CI/CD: —Ç–µ—Å—Ç—ã, —Å–±–æ—Ä–∫–∏, –ø—Ä–µ–≤—å—é-–æ–∫—Ä—É–∂–µ–Ω–∏—è", 
      "–¢—Ä–µ–∫–∏–Ω–≥ –∑–∞–¥–∞—á, –¥–µ–º–æ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é",
      "E2E/–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ/–Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ç–µ—Å—Ç—ã"
    ],
    deliverables: [
      "–†–µ–ª–∏–∑—ã –∫–∞–∂–¥—É—é 1‚Äì2 –Ω–µ–¥–µ–ª–∏",
      "–ß–µ–π–Ω–¥–∂–ª–æ–≥–∏, –ø—Ä–µ–≤—å—é-—Å—Å—ã–ª–∫–∏",
      "–û—Ç—á—ë—Ç—ã –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–æ–≤"
    ],
    timeline: "–°–ø—Ä–∏–Ω—Ç—ã –ø–æ 1‚Äì2 –Ω–µ–¥–µ–ª–∏",
    guarantee: "–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ä–µ–ª–∏–∑—ã –±–µ–∑ –æ—Ç–∫–∞—Ç–æ–≤"
  }

  const codeLines = [
    'const deploy = async () => {',
    '  await runTests();',
    '  await buildApp();',
    '  await deployToProd();',
    '  return "Success! üöÄ";',
    '};'
  ]

  const modalContent = {
    gitflow: {
      title: "Git Flow & Code Review",
      content: [
        "‚Ä¢ –í–µ—Ç–≤–ª–µ–Ω–∏–µ –ø–æ GitFlow —Å feature/develop/main –≤–µ—Ç–∫–∞–º–∏",
        "‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π Code Review –¥–ª—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π",
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ª–∏–Ω—Ç–µ—Ä—ã (ESLint, Prettier)",
        "‚Ä¢ Pre-commit hooks –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞",
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PR"
      ]
    },
    cicd: {
      title: "CI/CD Pipeline",
      content: [
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∫–æ–º–º–∏—Ç–µ",
        "‚Ä¢ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (unit, integration, e2e)",
        "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ preview-–æ–∫—Ä—É–∂–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–π –≤–µ—Ç–∫–∏",
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –≤ staging –∏ production",
        "‚Ä¢ –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º"
      ]
    },
    testing: {
      title: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
      content: [
        "‚Ä¢ Unit —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º >80%",
        "‚Ä¢ Integration —Ç–µ—Å—Ç—ã –¥–ª—è API",
        "‚Ä¢ E2E —Ç–µ—Å—Ç—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤",
        "‚Ä¢ –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ smoke-—Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è"
      ]
    },
    releases: {
      title: "–†–µ–ª–∏–∑—ã",
      content: [
        "‚Ä¢ –†–µ–ª–∏–∑—ã –∫–∞–∂–¥—ã–µ 1-2 –Ω–µ–¥–µ–ª–∏",
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ changelog –∏ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "‚Ä¢ Feature flags –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è",
        "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º–µ—Ç—Ä–∏–∫ –ø–æ—Å–ª–µ —Ä–µ–ª–∏–∑–∞",
        "‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–∞—Ç –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö"
      ]
    }
  }

  return (
    <div className="relative w-full h-full flex items-center justify-center p-2 sm:p-4">
      {/* Glass –∫–∞—Ä—Ç–æ—á–∫–∞ */}
      <motion.div
        initial={{ opacity: 0, y: 20, scale: 0.95 }}
        animate={{ opacity: 1, y: 0, scale: 1 }}
        transition={{ duration: prefersReducedMotion ? 0.3 : 0.6 }}
        className={`relative max-w-6xl w-full ${
          currentSkin === 'neonGlass' 
            ? 'bg-white/10 backdrop-blur-md border border-cyan-400/30 shadow-2xl shadow-cyan-400/20'
            : currentSkin === 'warmGlow'
            ? 'bg-white/10 backdrop-blur-md border border-orange-400/30 shadow-2xl shadow-orange-400/20'
            : 'bg-white/10 backdrop-blur-md border border-gray-400/30 shadow-2xl shadow-gray-400/20'
        } rounded-2xl p-3 sm:p-4`}
      >
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π –∏ –¥–æ–≤–µ—Ä–∏–µ–º */}
        <div className="text-center mb-4">
          <motion.div
            className="inline-flex items-center justify-center w-10 h-10 mb-2 rounded-full bg-gradient-to-br from-yellow-400 to-orange-500"
            animate={isGlowing ? {
              scale: [1, 1.1, 1],
              boxShadow: [
                '0 0 0 0 rgba(251, 191, 36, 0.4)',
                '0 0 0 15px rgba(251, 191, 36, 0)',
                '0 0 0 0 rgba(251, 191, 36, 0)'
              ]
            } : {}}
            transition={{ duration: 0.6, ease: "easeInOut" }}
          >
            <Zap 
              className={`w-5 h-5 ${
                currentSkin === 'neonGlass' 
                  ? 'text-yellow-100'
                  : currentSkin === 'warmGlow'
                  ? 'text-orange-100'
                  : 'text-gray-100'
              }`}
            />
          </motion.div>
          
          <motion.h1 
            className={`text-xl sm:text-2xl font-bold mb-1 ${
              currentSkin === 'neonGlass' 
                ? 'text-yellow-400'
                : currentSkin === 'warmGlow'
                ? 'text-orange-400'
                : 'text-gray-400'
            }`}
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2, duration: 0.5 }}
          >
            {content.title}
          </motion.h1>
          
          <motion.p 
            className="text-xs sm:text-sm text-white/80 mb-3"
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3, duration: 0.5 }}
          >
            {content.subtitle}
          </motion.p>

          {/* Trust indicators */}
          <motion.div 
            className="flex flex-wrap justify-center gap-2 text-xs"
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.4, duration: 0.5 }}
          >
            <div className={`px-2 py-1 rounded-full ${
              currentSkin === 'neonGlass' 
                ? 'bg-yellow-500/20 text-yellow-300'
                : currentSkin === 'warmGlow'
                ? 'bg-orange-500/20 text-orange-300'
                : 'bg-gray-500/20 text-gray-300'
            }`}>
              {content.trust.experience}
            </div>
            <div className={`px-2 py-1 rounded-full ${
              currentSkin === 'neonGlass' 
                ? 'bg-green-500/20 text-green-300'
                : currentSkin === 'warmGlow'
                ? 'bg-emerald-500/20 text-emerald-300'
                : 'bg-gray-500/20 text-gray-300'
            }`}>
              {content.trust.success}
            </div>
            <div className={`px-2 py-1 rounded-full ${
              currentSkin === 'neonGlass' 
                ? 'bg-purple-500/20 text-purple-300'
                : currentSkin === 'warmGlow'
                ? 'bg-red-500/20 text-red-300'
                : 'bg-gray-500/20 text-gray-300'
            }`}>
              {content.trust.expertise}
            </div>
          </motion.div>
        </div>

        {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ */}
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-3 mb-4">
          {/* Git Flow */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.5, duration: 0.5 }}
            className={`p-3 rounded-lg cursor-pointer transition-all duration-300 hover:scale-105 relative ${
              currentSkin === 'neonGlass' 
                ? 'bg-cyan-500/10 border border-cyan-400/20 hover:bg-cyan-500/20'
                : currentSkin === 'warmGlow'
                ? 'bg-orange-500/10 border border-orange-400/20 hover:bg-orange-500/20'
                : 'bg-gray-500/10 border border-gray-400/20 hover:bg-gray-500/20'
            }`}
            onClick={() => setActiveModal('gitflow')}
          >
            <div className="flex items-center justify-between mb-1">
              <div className="flex items-center">
                <GitBranch className={`w-3 h-3 mr-2 ${
                  currentSkin === 'neonGlass' 
                    ? 'text-cyan-400'
                    : currentSkin === 'warmGlow'
                    ? 'text-orange-400'
                    : 'text-gray-400'
                }`} />
                <h3 className={`text-xs font-semibold ${
                  currentSkin === 'neonGlass' 
                    ? 'text-cyan-300'
                    : currentSkin === 'warmGlow'
                    ? 'text-orange-300'
                    : 'text-gray-300'
                }`}>
                  Git Flow
                </h3>
              </div>
              <Info className="w-3 h-3 text-white/60" />
            </div>
            <p className="text-xs text-white/80">
              Code Review, –ª–∏–Ω—Ç–µ—Ä—ã
            </p>
          </motion.div>

          {/* CI/CD Pipeline */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.6, duration: 0.5 }}
            className={`p-3 rounded-lg cursor-pointer transition-all duration-300 hover:scale-105 relative ${
              isPipelineRunning 
                ? currentSkin === 'neonGlass' 
                  ? 'bg-green-500/20 border border-green-400/40'
                  : currentSkin === 'warmGlow'
                  ? 'bg-emerald-500/20 border border-emerald-400/40'
                  : 'bg-gray-500/20 border border-gray-400/40'
                : currentSkin === 'neonGlass' 
                ? 'bg-green-500/10 border border-green-400/20 hover:bg-green-500/20'
                : currentSkin === 'warmGlow'
                ? 'bg-emerald-500/10 border border-emerald-400/20 hover:bg-emerald-500/20'
                : 'bg-gray-500/10 border border-gray-400/20 hover:bg-gray-500/20'
            }`}
            onClick={() => setActiveModal('cicd')}
          >
            <div className="flex items-center justify-between mb-1">
              <div className="flex items-center">
                <motion.div
                  animate={isPipelineRunning ? { rotate: 360 } : {}}
                  transition={{ duration: 2, repeat: isPipelineRunning ? Infinity : 0, ease: "linear" }}
                >
                  <Rocket className={`w-3 h-3 mr-2 ${
                    currentSkin === 'neonGlass' 
                      ? 'text-green-400'
                      : currentSkin === 'warmGlow'
                      ? 'text-emerald-400'
                      : 'text-gray-400'
                  }`} />
                </motion.div>
                <h3 className={`text-xs font-semibold ${
                  currentSkin === 'neonGlass' 
                    ? 'text-green-300'
                    : currentSkin === 'warmGlow'
                    ? 'text-emerald-300'
                    : 'text-gray-300'
                }`}>
                  CI/CD
                </h3>
              </div>
              <Info className="w-3 h-3 text-white/60" />
            </div>
            <p className="text-xs text-white/80">
              {isTesting ? '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...' : isDeploying ? '–î–µ–ø–ª–æ–π...' : isReleasing ? '–†–µ–ª–∏–∑...' : '–ê–≤—Ç–æ-–¥–µ–ø–ª–æ–π'}
            </p>
          </motion.div>

          {/* Testing */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.7, duration: 0.5 }}
            className={`p-3 rounded-lg cursor-pointer transition-all duration-300 hover:scale-105 relative ${
              isTesting 
                ? currentSkin === 'neonGlass' 
                  ? 'bg-purple-500/20 border border-purple-400/40'
                  : currentSkin === 'warmGlow'
                  ? 'bg-red-500/20 border border-red-400/40'
                  : 'bg-gray-500/20 border border-gray-400/40'
                : currentSkin === 'neonGlass' 
                ? 'bg-purple-500/10 border border-purple-400/20 hover:bg-purple-500/20'
                : currentSkin === 'warmGlow'
                ? 'bg-red-500/10 border border-red-400/20 hover:bg-red-500/20'
                : 'bg-gray-500/10 border border-gray-400/20 hover:bg-gray-500/20'
            }`}
            onClick={() => setActiveModal('testing')}
          >
            <div className="flex items-center justify-between mb-1">
              <div className="flex items-center">
                <motion.div
                  animate={isTesting ? { scale: [1, 1.2, 1] } : {}}
                  transition={{ duration: 0.5, repeat: isTesting ? Infinity : 0 }}
                >
                  <CheckCircle className={`w-3 h-3 mr-2 ${
                    currentSkin === 'neonGlass' 
                      ? 'text-purple-400'
                      : currentSkin === 'warmGlow'
                      ? 'text-red-400'
                      : 'text-gray-400'
                  }`} />
                </motion.div>
                <h3 className={`text-xs font-semibold ${
                  currentSkin === 'neonGlass' 
                    ? 'text-purple-300'
                    : currentSkin === 'warmGlow'
                    ? 'text-red-300'
                    : 'text-gray-300'
                }`}>
                  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                </h3>
              </div>
              <Info className="w-3 h-3 text-white/60" />
            </div>
            <p className="text-xs text-white/80">
              E2E, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
            </p>
          </motion.div>

          {/* Releases */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.8, duration: 0.5 }}
            className={`p-3 rounded-lg cursor-pointer transition-all duration-300 hover:scale-105 relative ${
              isReleasing 
                ? currentSkin === 'neonGlass' 
                  ? 'bg-yellow-500/20 border border-yellow-400/40'
                  : currentSkin === 'warmGlow'
                  ? 'bg-amber-500/20 border border-amber-400/40'
                  : 'bg-gray-500/20 border border-gray-400/40'
                : currentSkin === 'neonGlass' 
                ? 'bg-yellow-500/10 border border-yellow-400/20 hover:bg-yellow-500/20'
                : currentSkin === 'warmGlow'
                ? 'bg-amber-500/10 border border-amber-400/20 hover:bg-amber-500/20'
                : 'bg-gray-500/10 border border-gray-400/20 hover:bg-gray-500/20'
            }`}
            onClick={() => setActiveModal('releases')}
          >
            <div className="flex items-center justify-between mb-1">
              <div className="flex items-center">
                <motion.div
                  animate={isReleasing ? { y: [0, -4, 0] } : {}}
                  transition={{ duration: 0.6, repeat: isReleasing ? Infinity : 0 }}
                >
                  <BarChart3 className={`w-3 h-3 mr-2 ${
                    currentSkin === 'neonGlass' 
                      ? 'text-yellow-400'
                      : currentSkin === 'warmGlow'
                      ? 'text-amber-400'
                      : 'text-gray-400'
                  }`} />
                </motion.div>
                <h3 className={`text-xs font-semibold ${
                  currentSkin === 'neonGlass' 
                    ? 'text-yellow-300'
                    : currentSkin === 'warmGlow'
                    ? 'text-amber-300'
                    : 'text-gray-300'
                }`}>
                  –†–µ–ª–∏–∑—ã
                </h3>
              </div>
              <Info className="w-3 h-3 text-white/60" />
            </div>
            <p className="text-xs text-white/80">
              –ö–∞–∂–¥—É—é 1‚Äì2 –Ω–µ–¥–µ–ª–∏
            </p>
          </motion.div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
          {/* –ü—Ä–æ—Ü–µ—Å—Å */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.9, duration: 0.5 }}
            className={`p-3 rounded-lg ${
              currentSkin === 'neonGlass' 
                ? 'bg-cyan-500/10 border border-cyan-400/20'
                : currentSkin === 'warmGlow'
                ? 'bg-orange-500/10 border border-orange-400/20'
                : 'bg-gray-500/10 border border-gray-400/20'
            }`}
          >
            <h3 className={`text-xs font-semibold mb-2 ${
              currentSkin === 'neonGlass' 
                ? 'text-cyan-300'
                : currentSkin === 'warmGlow'
                ? 'text-orange-300'
                : 'text-gray-300'
            }`}>
              –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
            </h3>
            <ul className="space-y-1">
              {content.process.map((item, itemIndex) => (
                <motion.li
                  key={itemIndex}
                  className="flex items-start text-xs"
                  initial={{ opacity: 0, x: -10 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 1.0 + itemIndex * 0.05, duration: 0.3 }}
                >
                  <span className={`mr-1 mt-1 ${
                    currentSkin === 'neonGlass' 
                      ? 'text-cyan-400'
                      : currentSkin === 'warmGlow'
                      ? 'text-orange-400'
                      : 'text-gray-400'
                  }`}>‚Ä¢</span>
                  <span className="text-white/90">{item}</span>
                </motion.li>
              ))}
            </ul>
          </motion.div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1.0, duration: 0.5 }}
            className={`p-3 rounded-lg ${
              currentSkin === 'neonGlass' 
                ? 'bg-green-500/10 border border-green-400/20'
                : currentSkin === 'warmGlow'
                ? 'bg-emerald-500/10 border border-emerald-400/20'
                : 'bg-gray-500/10 border border-gray-400/20'
            }`}
          >
            <h3 className={`text-xs font-semibold mb-2 ${
              currentSkin === 'neonGlass' 
                ? 'text-green-300'
                : currentSkin === 'warmGlow'
                ? 'text-emerald-300'
                : 'text-gray-300'
            }`}>
              –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ
            </h3>
            <ul className="space-y-1">
              {content.deliverables.map((item, itemIndex) => (
                <motion.li
                  key={itemIndex}
                  className="flex items-start text-xs"
                  initial={{ opacity: 0, x: 10 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 1.1 + itemIndex * 0.05, duration: 0.3 }}
                >
                  <span className={`mr-1 mt-1 ${
                    currentSkin === 'neonGlass' 
                      ? 'text-cyan-400'
                      : currentSkin === 'warmGlow'
                      ? 'text-orange-400'
                      : 'text-gray-400'
                  }`}>‚Ä¢</span>
                  <span className="text-white/90">{item}</span>
                </motion.li>
              ))}
            </ul>
          </motion.div>

          {/* –í—Ä–µ–º—è –∏ –≥–∞—Ä–∞–Ω—Ç–∏—è */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1.1, duration: 0.5 }}
            className={`p-3 rounded-lg ${
              currentSkin === 'neonGlass' 
                ? 'bg-purple-500/10 border border-purple-400/20'
                : currentSkin === 'warmGlow'
                ? 'bg-red-500/10 border border-red-400/20'
                : 'bg-gray-500/10 border border-gray-400/20'
            }`}
          >
            <h3 className={`text-xs font-semibold mb-2 ${
              currentSkin === 'neonGlass' 
                ? 'text-purple-300'
                : currentSkin === 'warmGlow'
                ? 'text-red-300'
                : 'text-gray-300'
            }`}>
              –†–∏—Ç–º –∏ –≥–∞—Ä–∞–Ω—Ç–∏—è
            </h3>
            <div className="space-y-2">
              <motion.div
                className={`text-xs px-2 py-1 rounded-full inline-block ${
                  currentSkin === 'neonGlass' 
                    ? 'bg-cyan-500/20 text-cyan-300'
                    : currentSkin === 'warmGlow'
                    ? 'bg-orange-500/20 text-orange-300'
                    : 'bg-gray-500/20 text-gray-300'
                }`}
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 1.2, duration: 0.3 }}
              >
                {content.timeline}
              </motion.div>
              <p className="text-xs text-white/80 leading-relaxed">
                {content.guarantee}
              </p>
            </div>
          </motion.div>
        </div>

        {/* CTA –∫–Ω–æ–ø–∫–∏ */}
        <motion.div 
          className="flex flex-col sm:flex-row gap-2 mt-4 pt-3 border-t border-white/20"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 1.2, duration: 0.5 }}
        >
          <button className={`flex-1 px-3 py-2 rounded-lg font-medium text-xs transition-all duration-300 ${
            currentSkin === 'neonGlass' 
              ? 'bg-cyan-500 hover:bg-cyan-600 text-white shadow-lg shadow-cyan-500/25'
              : currentSkin === 'warmGlow'
              ? 'bg-orange-500 hover:bg-orange-600 text-white shadow-lg shadow-orange-500/25'
              : 'bg-gray-500 hover:bg-gray-600 text-white shadow-lg shadow-gray-500/25'
          }`}>
            –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
          </button>
          <button className={`flex-1 px-3 py-2 rounded-lg font-medium text-xs transition-all duration-300 border ${
            currentSkin === 'neonGlass' 
              ? 'border-cyan-400 text-cyan-400 hover:bg-cyan-400/10'
              : currentSkin === 'warmGlow'
              ? 'border-orange-400 text-orange-400 hover:bg-orange-400/10'
              : 'border-gray-400 text-gray-400 hover:bg-gray-400/10'
          }`}>
            –û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
          </button>
        </motion.div>
      </motion.div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      <AnimatePresence>
        {activeModal && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4"
            onClick={() => setActiveModal(null)}
          >
            <motion.div
              initial={{ opacity: 0, scale: 0.9, y: 20 }}
              animate={{ opacity: 1, scale: 1, y: 0 }}
              exit={{ opacity: 0, scale: 0.9, y: 20 }}
              className={`relative max-w-md w-full ${
                currentSkin === 'neonGlass' 
                  ? 'bg-white/10 backdrop-blur-md border border-cyan-400/30 shadow-2xl shadow-cyan-400/20'
                  : currentSkin === 'warmGlow'
                  ? 'bg-white/10 backdrop-blur-md border border-orange-400/30 shadow-2xl shadow-orange-400/20'
                  : 'bg-white/10 backdrop-blur-md border border-gray-400/30 shadow-2xl shadow-gray-400/20'
              } rounded-2xl p-6`}
              onClick={(e) => e.stopPropagation()}
            >
              <div className="flex items-center justify-between mb-4">
                <h3 className={`text-lg font-bold ${
                  currentSkin === 'neonGlass' 
                    ? 'text-cyan-400'
                    : currentSkin === 'warmGlow'
                    ? 'text-orange-400'
                    : 'text-gray-400'
                }`}>
                  {modalContent[activeModal as keyof typeof modalContent]?.title}
                </h3>
                <button
                  onClick={() => setActiveModal(null)}
                  className={`p-1 rounded-full hover:bg-white/10 transition-colors ${
                    currentSkin === 'neonGlass' 
                      ? 'text-cyan-400'
                      : currentSkin === 'warmGlow'
                      ? 'text-orange-400'
                      : 'text-gray-400'
                  }`}
                >
                  <X className="w-5 h-5" />
                </button>
              </div>
              
              <div className="space-y-2">
                {modalContent[activeModal as keyof typeof modalContent]?.content.map((item, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, x: -10 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className="text-sm text-white/90"
                  >
                    {item}
                  </motion.div>
                ))}
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  )
}

export default ProcessStage4
